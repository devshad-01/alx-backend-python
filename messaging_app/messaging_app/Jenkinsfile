pipeline {
    agent any
    environment {
        VENV = 'venv'
        DOCKER_IMAGE = 'your-dockerhub-username/django-messaging-app:latest'
        DOCKERHUB_CREDENTIALS = 'your-dockerhub-credentials-id'
    }
    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'your-github-credentials-id', url: 'https://github.com/your-username/alx-backend-python.git'
                sh 'git branch'
            }
        }
        stage('Set up Python') {
            steps {
                sh 'python3 -m venv $VENV'
                sh 'pip3 install --upgrade pip'
                sh './$VENV/bin/pip install -r messaging_app/messaging_app/requirements.txt'
            }
        }
        stage('Run Tests') {
            steps {
                sh './$VENV/bin/pytest messaging_app/messaging_app/ --junitxml=pytest-report.xml'
            }
            post {
                always {
                    junit 'pytest-report.xml'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: env.DOCKERHUB_CREDENTIALS, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                    sh 'docker push $DOCKER_IMAGE'
                }
            }
        }
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        disableConcurrentBuilds()
    }
}
